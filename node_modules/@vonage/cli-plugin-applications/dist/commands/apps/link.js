"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const parser_1 = require("@oclif/parser");
const app_base_1 = tslib_1.__importDefault(require("../../app_base"));
class ApplicationsLink extends app_base_1.default {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const flags = this.parsedFlags;
            const args = this.parsedArgs;
            const number = yield this.listNumbers(flags.number);
            // update the number with appid, lvn, country
            let response = yield this.updateNumber(flags.number, number.numbers[0].country, args.appId);
            if (response['error-code'] === '200') {
                this.log(`Number '${flags.number}' is assigned to application '${args.appId}'.`);
            }
        });
    }
    catch(error) {
        const _super = Object.create(null, {
            catch: { get: () => super.catch }
        });
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return _super.catch.call(this, error);
        });
    }
}
exports.default = ApplicationsLink;
ApplicationsLink.description = 'link numbers to Vonage application';
ApplicationsLink.usage = `apps:link [APPID] --number=[NUMBER]`;
ApplicationsLink.flags = Object.assign(Object.assign({}, app_base_1.default.flags), { number: parser_1.flags.string({
        description: 'Owned number to be assigned',
        required: true
    }) });
ApplicationsLink.args = [
    { name: 'appId', required: true },
];
