"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const cli_utils_1 = __importDefault(require("@vonage/cli-utils"));
const command_1 = require("@oclif/command");
const fs_1 = require("fs");
class GenerateJWT extends cli_utils_1.default {
    async run() {
        const flags = this.parsedFlags;
        let private_key = typeof flags.key_file === 'string' ? (0, fs_1.readFileSync)(flags.key_file.replace(/(\s+)/g, '\\$1')) : null;
        let claims = {
            application_id: flags.app_id,
            sub: flags.subject,
            exp: flags.exp || Date.now() + 21600
        };
        flags.acl ? claims['acl'] = JSON.parse(flags.acl.toString()) : null;
        let jwt = this.Vonage.generateJwt(private_key, claims);
        this.log(jwt);
        this.exit();
    }
}
exports.default = GenerateJWT;
GenerateJWT.description = 'generate a Vonage JWT token';
GenerateJWT.examples = [
    `jwt --key_file='./testing.key' --app_id=31521081-e4c7-41fe-bccc-44af98879068`
];
GenerateJWT.flags = {
    ...cli_utils_1.default.flags,
    app_id: command_1.flags.string({
        required: true,
        description: "Application ID to authenticate with"
    }),
    key_file: command_1.flags.string({
        required: true,
        description: "Path to private key file location"
    }),
    subject: command_1.flags.string({
        required: false,
    }),
    acl: command_1.flags.string({
        required: false,
        description: `Read more about it in the ACL overview - https://developer.vonage.com/conversation/guides/jwt-acl#acls`,
    }),
    exp: command_1.flags.string({ required: false, description: "Expiration of created JWT - defaults to 24 hours." }),
};
GenerateJWT.args = [];
